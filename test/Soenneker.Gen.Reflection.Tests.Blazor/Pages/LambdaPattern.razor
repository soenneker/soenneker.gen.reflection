@page "/lambda-pattern"
@rendermode InteractiveWebAssembly

<PageTitle>Lambda Pattern Test</PageTitle>

<h1>Lambda Pattern Test</h1>

<button class="btn btn-primary" @onclick="TestLambdaPattern">Test Lambda Pattern</button>

@code {
    private List<ExternalSourceDto> _sourceList =
    [
        new ExternalSourceDto { Id = "lambda-1" },

        new ExternalSourceDto { Id = "lambda-2" },

        new ExternalSourceDto { Id = "lambda-3" }
    ];

    private void TestLambdaPattern()
    {
        // Pattern: Adapt calls in lambda expressions
        List<ExternalDestDto> adaptedList = _sourceList.Select(x => x.Adapt<ExternalDestDto>()).ToList();
        
        // Pattern: Adapt calls in Where lambda
        List<ExternalDestDto> filteredAdapted = _sourceList
            .Where(x => x.Id.Contains("lambda"))
            .Select(x => x.Adapt<ExternalDestDto>())
            .ToList();
        
        // Pattern: Adapt calls in Action lambda
        Action<ExternalSourceDto> adaptAction = source => 
        {
            var adapted = source.Adapt<ExternalDestDto>();
            // Process adapted
        };
        
        _sourceList.ForEach(adaptAction);
        
        // Pattern: Adapt calls in Func lambda
        Func<ExternalSourceDto, ExternalDestDto> adaptFunc = source => source.Adapt<ExternalDestDto>();
        List<ExternalDestDto> funcAdapted = _sourceList.Select(adaptFunc).ToList();
        
        // Pattern: Adapt calls in local function with lambda
        ProcessWithLambda(x => x.Adapt<ExternalDestDto>());
    }
    
    private void ProcessWithLambda(Func<ExternalSourceDto, ExternalDestDto> adapter)
    {
        ExternalDestDto result = adapter(_sourceList.First());
    }
}

